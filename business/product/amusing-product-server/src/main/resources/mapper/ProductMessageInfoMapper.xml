<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.amusing.start.product.mapper.ProductMessageInfoMapper">
    <resultMap id="BaseResultMap" type="com.amusing.start.product.pojo.ProductMessageInfo">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="tx_id" jdbcType="VARCHAR" property="txId"/>
        <result column="status" jdbcType="BIT" property="status"/>
        <result column="result_status" jdbcType="BIT" property="resultStatus"/>
        <result column="shop_id" jdbcType="VARCHAR" property="shopId"/>
        <result column="product_id" jdbcType="VARCHAR" property="productId"/>
        <result column="product_num" jdbcType="INTEGER" property="productNum"/>
        <result column="price_id" jdbcType="VARCHAR" property="priceId"/>
        <result column="amount" jdbcType="DECIMAL" property="amount"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, tx_id, `status`, result_status, shop_id, product_id, product_num, price_id, amount, 
    create_time, update_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from product_message_info
        where id = #{id,jdbcType=BIGINT}
    </select>

    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.amusing.start.product.pojo.ProductMessageInfo" useGeneratedKeys="true">
        insert into product_message_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="txId != null">
                tx_id,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="resultStatus != null">
                result_status,
            </if>
            <if test="shopId != null">
                shop_id,
            </if>
            <if test="productId != null">
                product_id,
            </if>
            <if test="productNum != null">
                product_num,
            </if>
            <if test="priceId != null">
                price_id,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="txId != null">
                #{txId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=BIT},
            </if>
            <if test="resultStatus != null">
                #{resultStatus,jdbcType=BIT},
            </if>
            <if test="shopId != null">
                #{shopId,jdbcType=VARCHAR},
            </if>
            <if test="productId != null">
                #{productId,jdbcType=VARCHAR},
            </if>
            <if test="productNum != null">
                #{productNum,jdbcType=INTEGER},
            </if>
            <if test="priceId != null">
                #{priceId,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.amusing.start.product.pojo.ProductMessageInfo">
        update product_message_info
        <set>
            <if test="txId != null">
                tx_id = #{txId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=BIT},
            </if>
            <if test="resultStatus != null">
                result_status = #{resultStatus,jdbcType=BIT},
            </if>
            <if test="shopId != null">
                shop_id = #{shopId,jdbcType=VARCHAR},
            </if>
            <if test="productId != null">
                product_id = #{productId,jdbcType=VARCHAR},
            </if>
            <if test="productNum != null">
                product_num = #{productNum,jdbcType=INTEGER},
            </if>
            <if test="priceId != null">
                price_id = #{priceId,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateStatus">
        update product_message_info set status = #{ status }, result_status = #{ resultStatus } where tx_id = #{ txId }
    </update>
</mapper>