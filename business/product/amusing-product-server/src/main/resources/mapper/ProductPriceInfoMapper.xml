<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.amusing.start.product.mapper.ProductPriceInfoMapper">
    <resultMap id="BaseResultMap" type="com.amusing.start.product.entity.pojo.ProductPriceInfo">
        <result column="price_id" jdbcType="VARCHAR" property="priceId"/>
        <result column="product_id" jdbcType="VARCHAR" property="productId"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="price" jdbcType="INTEGER" property="price"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_time" jdbcType="BIGINT" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        price_id, product_id, version, price, create_by, create_time, update_by, update_time
    </sql>

    <insert id="insert" parameterType="com.amusing.start.product.entity.pojo.ProductPriceInfo">
        insert into product_price_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="priceId != null">
                price_id,
            </if>
            <if test="productId != null">
                product_id,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="priceId != null">
                #{priceId,jdbcType=VARCHAR},
            </if>
            <if test="productId != null">
                #{productId,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                #{version,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                #{price,jdbcType=INTEGER},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="com.amusing.start.product.entity.pojo.ProductPriceInfo">
        update product_price_info
        <set>
            <if test="productId != null">
                product_id = #{productId,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                version = #{version,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=INTEGER},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=BIGINT},
            </if>
        </set>
        where price_id = #{priceId,jdbcType=VARCHAR}
    </update>

    <select id="getLastPrice" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from product_price_info where product_id = #{productId} order BY version desc limit 1;
    </select>

</mapper>