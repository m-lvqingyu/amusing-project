<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.amusing.start.order.mapper.OrderInfoMapper">
    <resultMap id="BaseResultMap" type="com.amusing.start.order.entity.pojo.OrderInfo">
        <result column="order_no" jdbcType="VARCHAR" property="orderNo"/>
        <result column="reserve_id" jdbcType="VARCHAR" property="reserveId"/>
        <result column="consignee_id" jdbcType="VARCHAR" property="consigneeId"/>
        <result column="total_amount" jdbcType="INTEGER" property="totalAmount"/>
        <result column="real_amount" jdbcType="INTEGER" property="realAmount"/>
        <result column="use_coupon" jdbcType="INTEGER" property="useCoupon"/>
        <result column="coupon_amount" jdbcType="INTEGER" property="couponAmount"/>
        <result column="use_activity" jdbcType="INTEGER" property="useActivity"/>
        <result column="activity_amount" jdbcType="INTEGER" property="activityAmount"/>
        <result column="is_freight" jdbcType="BIT" property="isFreight"/>
        <result column="freight_amount" jdbcType="INTEGER" property="freightAmount"/>
        <result column="status" jdbcType="BIT" property="status"/>
        <result column="is_evaluate" jdbcType="BIT" property="isEvaluate"/>
        <result column="pay_type" jdbcType="BIT" property="payType"/>
        <result column="pay_id" jdbcType="BIGINT" property="payId"/>
        <result column="can_refund" jdbcType="INTEGER" property="canRefund"/>
        <result column="refund_amount" jdbcType="INTEGER" property="refundAmount"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="update_time" jdbcType="BIGINT" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        order_no, reserve_id, consignee_id, total_amount, real_amount, use_coupon, coupon_amount, use_activity,
        activity_amount, is_freight, freight_amount, `status`, is_evaluate, pay_type, pay_id, can_refund, refund_amount,
        create_by,update_by, create_time, update_time
    </sql>

    <insert id="insert" parameterType="com.amusing.start.order.entity.pojo.OrderInfo">
        insert into order_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="reserveId != null">
                reserve_id,
            </if>
            <if test="consigneeId != null">
                consignee_id,
            </if>
            <if test="totalAmount != null">
                total_amount,
            </if>
            <if test="realAmount != null">
                real_amount,
            </if>
            <if test="useCoupon != null">
                use_coupon,
            </if>
            <if test="couponAmount != null">
                coupon_amount,
            </if>
            <if test="useActivity != null">
                use_activity,
            </if>
            <if test="activityAmount != null">
                activity_amount,
            </if>
            <if test="isFreight != null">
                is_freight,
            </if>
            <if test="freightAmount != null">
                freight_amount,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="isEvaluate != null">
                is_evaluate,
            </if>
            <if test="payType != null">
                pay_type,
            </if>
            <if test="payId != null">
                pay_id,
            </if>
            <if test="canRefund != null">
                can_refund,
            </if>
            <if test="refundAmount != null">
                refund_amount,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="reserveId != null">
                #{reserveId,jdbcType=VARCHAR},
            </if>
            <if test="consigneeId != null">
                #{consigneeId,jdbcType=VARCHAR},
            </if>
            <if test="totalAmount != null">
                #{totalAmount,jdbcType=INTEGER},
            </if>
            <if test="realAmount != null">
                #{realAmount,jdbcType=INTEGER},
            </if>
            <if test="useCoupon != null">
                #{useCoupon,jdbcType=INTEGER},
            </if>
            <if test="couponAmount != null">
                #{couponAmount,jdbcType=INTEGER},
            </if>
            <if test="useActivity != null">
                #{useActivity,jdbcType=INTEGER},
            </if>
            <if test="activityAmount != null">
                #{activityAmount,jdbcType=INTEGER},
            </if>
            <if test="isFreight != null">
                #{isFreight,jdbcType=BIT},
            </if>
            <if test="freightAmount != null">
                #{freightAmount,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=BIT},
            </if>
            <if test="isEvaluate != null">
                #{isEvaluate,jdbcType=BIT},
            </if>
            <if test="payType != null">
                #{payType,jdbcType=BIT},
            </if>
            <if test="payId != null">
                #{payId,jdbcType=BIGINT},
            </if>
            <if test="canRefund != null">
                #{canRefund,jdbcType=BIT},
            </if>
            <if test="refundAmount != null">
                #{refundAmount,jdbcType=INTEGER},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>

    <select id="getByNo" resultType="com.amusing.start.order.entity.pojo.OrderInfo">
        select
        <include refid="Base_Column_List"/>
        from order_info where order_no = #{orderNo}
        <if test="userId != null and userId != ''">
            and reserve_id = #{userId}
        </if>
        and status > 0 limit 1;
    </select>

    <update id="updateStatus">
        update order_info
        set status = #{status},
        update_time = now()
        <if test="payId != null">
            , pay_id = #{payId}
        </if>
        where order_no = #{orderNo} limit 1;
    </update>

    <update id="updateCanRefund">
        update order_info
        set can_refund  = #{status},
            update_time = now()
        where order_no = #{orderNo}
        limit 1;
    </update>

    <update id="updateRefundAmount">
        update order_info
        set refund_amount = #{refundAmount},
            update_time   = now()
        where order_no = #{orderNo}
        limit 1;
    </update>

</mapper>